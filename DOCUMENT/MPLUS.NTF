.ll 76
.so @orm.ntf
.so @pri.ntf
.book_style
.mh /mPlus(mfxc+) user's manual//ver.1.18DOC/
.mf ''- % -'DIL1994'

.\"docname
mplus.doc
.hl
.\"tilte
DOS汎用音源ドライバ(XMML3.00仕様) Music Macro Language Compiler system
.ce
MFXDRV/DDN compiler MFXC Ver.3
.ce
mPlus(mfxc+) version 1.18 release 3.1
.\"Copyright表示
.ce
copyright (c) 1991-95 by T.Kobayashi / Interfair(DIL)
.ce
all rights reserved.

.hl

.chapter はじめに

.in 4
○どもども
.in 8
.\"紹介文
　このたびは、MFXDRV/DDN(XMML3.00仕様)用のMMLコンパイラ mPlus を
ダウンロードしていただき、誠にありがとうござります。本ソフトウェアは
音源ドライバ MFXDRV/DDN をフルに活用できるような言語仕様にしてますが
一部、かなりの不備もあります(笑)。おまけにちょっと不安定です(笑)(っておい...)
。遊びがてら何かつくってみて、なにか不満がありましたら、私までご連絡下され
ばできるたけの対処を致しますので、これからもよろしくおねがいします。ぐう。

.in 4
○mPlus(mfxc+)の特徴
.in 8
.item
XMML2.00コンパイラ、mfxc.exeとの互換性が全くない(笑)。
.itemnr
おもいっきり複雑なことが出来るマクロ(笑)
.itemnr
１ファイル中に、何曲も曲を作成できる。
.itemnr
C だか Pascal に似た、なんだかよく分からないsyntax(笑)。
.itemnr
マクロ展開時に演算も可能。
.itemnr
トラックごとに和音もつくれる。keyの設定も簡単。
.itemnr
.{
一応1パスコンパイラで速いはずなのだが、
和音 & ゲート処理のため、コンパイル速度がちょっと遅い。
.}
.itemnr
.{
ほとんどの機能を動的なメモリー構造にしているので(スタック以外)、
メモリーが許す限り、マクロ登録、マクロ再帰呼び出し、再帰的インクルードなど
が可能。
.}
.itemnr
動作が多少不安定(T_T)
.itemend
ということで、あまり冴えないコンパイラです^^;;

.in 0
※動作機種等

.in 4
○動作機種
.in 8
.\"動作機種名
DOSのアプリケーションが動作する80186以降のCPUを搭載した機種。
開発は PC-9801RA21(Cx486DRx2)上で行いました。

.in 4
○動作OS
.in 8
.\"動作の前提となるソフト
MS-DOS version 3.10 以降、または同等以上の機能を持つ OS上で動作します。

.in 4
○必要メモリ
.in 8
.\"動作に必要な空きメモリ
本コンパイラは、ソースファイルや、マクロ定義の多さなどによりますが、
最低でも、約200k程度のメモリーが必要です。また、マクロ及びファイルの
include、計算処理などはすべて動的な構造にしているので、メモリー
が0になるまで定義、計算、及びincludeすることができます。

.in 0
※インストール

.in 4
○必要ファイル
.in 8
.\"同一のディレクトリに置くべきファイル
デフォルトで以下のファイルがまとめられています。
.quote
.{
.nf
mplus.doc       本ファイル
mplus.exe       mPlus コンパイラ本体
include.lzh     インクルードマクロファイル集
src.lzh         ソースプログラム
.}
.quoteend

デフォルトでMFXDRV/DDNシステムが使用する拡張子の意味を定義しておきます。
.quote
.{
.nf
〜.exe 〜.com   各種実行プログラム
〜.xdv          XDVドライバ(音源、タイマ、その他)
〜.mud          楽曲ファイル(演奏可能)
〜.eud          効果音ファイル
〜.mbs          ソースオブジェクト
〜.mbj          オブジェクト
〜.sbj          音色オブジェクト
〜.lis          音色ライブラリ
〜.mmd          mPlus MMLスクリプト
〜.mac          mPlus MML マクロスクリプト
.}
.quoteend

.bp
.in 0
.chapter 文法
.in 8
　基本的に以下の 3つの文体系になっています。
.item
　# で始まる文(システム制御およびコンパイル制御命令)
.itemnr
　. で始まる文(オブジェクト制御命令)
.itemnr
  コメント
.itemend

　以下コマンドまたは命令は、次のような書き方で説明を行っていきます。
.refer
.{
	<>	省略できないパラメータ
	[]	省略できるパラメータ
	..	繰り返して指定できる
	""	括弧内をそのまま書く
	A|B	A 若しくは B
.}
.referend

.bp
.in 4
○コメント
.in 8
  コメントは、行頭に ; もしくは * を書くことによって、それ以下に
記述することができます。ただし、トラック状態記述部や、MML内には
書くことが出来ません。もし、記述したい場合は、/* ... */ を
使用して下さい(このコメントはあらゆるところで有効)。

.bp
.in 4
○# で始まる文(システム制御命令)
.in 8
　# で始まる命令は、主にコンパイル動作や、MML則等を制御する命令です。
このシステム制御命令は、1行ごとにチェックしていくため、必ず
1行に1命令を置いて下さい。

　書式は
.quote
.{
.nf
.in 0
#システム制御命令名  パラメータ...
.}
.quoteend

.in 0
.box 30 40
命令
.boxnc
機能／解説
.boxnr
#timebase <number>
.boxnc
タイムベースを <number> で設定した値にします。通常は 48 です。
.boxnr
#title <title>
.boxnc
曲のタイトルを <title> に設定します。
.boxnr
#composer <composer>
.boxnc
作曲者を <composer> に設定します。
.boxnr
#arranger <arranger>
.boxnc
編曲者を <arranger> に設定します。
.boxnr
#lyric <lyric>
.boxnc
作詞者を <lyric> に設定します。
.boxnr
#artist <artist>
.boxnc
アーティスト名を <artist> に設定します。
.boxnr
#copyright <copyright>
.boxnc
著作権保有者を <copyright> に設定します。
.boxnr
#include <filename>
.boxnc
.{
<filename> で示されたファイルを、この命令が記述されている位置に
挿入します。また、挿入されたファイルの中に #include命令が存在
している場合、再帰的にメモリーが許す限り実行していきます。
.}
.boxnr
#define <mac1> [mac2]
.boxnc
.{
展開前を<mac1>、展開後を[mac2]としたマクロを登録します。[mac2]がない場合
名前のみを展開前の名前のみを登録します。
.}
.boxnr
.{
#def
.br
<mac1>
.br
#nextdef
.br
<mac2>
.br
#enddef
.}
.boxnc
.{
前の #defineと機能は同じですが、<mac1> 及び <mac2> が長い場合、この命令を使
用して下さい。途中のreturnコード、スペース、tabなどは削除(ただし、
ダブルクォーテーション内はそのまま)されます。<mac1> 及び <mac2> ともに
最大4096文字を記述可能です。
.}
.boxnr
#ifdef <macroname>
.boxnc
.{
<macroname> で与えられたマクロが #defineで登録されていたら、
〜#endif,#else,#elseifまでをコンパイル可能にします。もし登録されていなかったら
無視します。
.}
.boxnr
#ifndef <macroname>
.boxnc
.{
<macroname> で与えられたマクロが #defineで登録されていなかったら、あとは#ifdef
と同じ動作を行います。
.}
.boxnr
#else
.boxnc
.{
#ifdef,#ifndef〜#else までコンパイルされていなかったら #else〜#endifまで
コンパイルし、コンパイルされていなかったら #else〜#endifまでコンパイルします。
.}
.boxnr
#elseif <macroname>
.boxnc
.{
<macroname> で与えられたマクロが #defineで登録されていたら #elseと同じ動作
を行います。
.}
.boxnr
#endif
.boxnc
条件コンパイルの範囲を終了します。
.boxnr
#precede <DRVID> <objectname>
.boxnc
.{
もし、<DRVID>と一致するドライバが組み込まれていたら、優先的に
<objectname>で与えられた曲データの演奏を開始します。このコマンドは、
いくつでも指定することができ、演奏時は最初に書かれたものから調べていき、
最後まで<DRVID>が一致しなかった場合、_main を演奏します。
.}
.boxnr
#message <message>
.boxnc
<message> を標準出力に出力します。
.boxnr
#memo 〜 //
.boxnc
.{
#memo から // の間に記述されたメッセージを、メモとして mbs ファイルに
出力します。
.}
.boxend

.bp
.in 4
○. で始まる文(オブジェクト制御命令)
.in 8
　.で始まる命令は、.objectです。

　オブジェクトとは曲データを構成する
要素をしめします。なぜ、このような面倒臭い概念があるのか。
理由は簡単。MFXDRV/DDN は、MIDIでもOPNでもすべて同じMMLで制御できます。
しかし、MIDIで記述したドラムパートと、OPNで記述するドラムパートの書き方
というのは基本的に全然違うでしょう。MIDIの場合、各ノートがドラム／パーカ
ッションの１つ１つに対応していますが、OPNでは、音色を切り替えて
note-Onで発声させてやる必要があります。つまり、この違いをなんとか押さえる
ために、このような概念があるわけです。ほかにもいろいろな使い方があります(^^)。

　次に トラック状態 というのは、melodyはこの音源で鳴らせとか、
bassはあの音源でならせとか、もしMIDIが鳴らせるなら違うオブジェクトの
トラックxを鳴らせなどの、トラックと音源、オブジェクトの関係を
設定したものです。まぁ、そんなに難しく考える必要はありません。

　書式は
.quote
.{
.nf
.in 0
 .object <オブジェクト名> <トラック状態> {MML....}
.}
.quoteend

　オブジェクト名は31文字まで、使用できる文字は 0〜9,A〜Z,a〜z,_,.です。
またオブジェクト名の最初の文字は必ず _ を付加してください。
　曲データが１つしか無い場合、オブジェクト名は必ず _main にする必要が
あります。C言語で最初に実行される関数が int main() であるのと同じような
ものです(笑)。

　トラック状態は、次の書式です。
.quote
.{
.nf
.in 0
トラック名 = 音源1(Ch1),音源2(Ch2),音源3(Ch3),音源4(Ch4);
.}
.quoteend

　トラック名で与えられたチャンネルは、これこれの音源で演奏しなさい、という
感じですね。音源1
.note
.{
ここで、音源とは DRVID のことを指します。DRVIDについては、MFXDDNのドキュメント
を参照してください。
.}
(Ch1
.note
.{
Channel(チャンネル)の略。MIDIは1〜16のトラックがあるので、Chは0〜15になる。
つまり、Chが9のとき、ドラムパート。
.}
)をチェックして、それが使えないなら音源2(Ch2)へ
というように処理され、音源4をチェックしてそれが使用不可の場合、そのト
ラックは演奏されません。
　また、音源(Ch)に *COND 、OFF というのも使用できます。
　*COND は、Conductorの略で、演奏されなかったら非常に困るMMLがあるトラック(
たとえば、テンポとかマスターボリュームとか音色定義とかです)を示すものです。
この場合、演奏(コントロール)は強制的になにかの音源に自動的に割り当てられます。
　OFF は、演奏するな！という命令です。

　最後にMMLの書き方です。次の書式です。
.quote
.{
.nf
.in 0
トラック名  MML列;
.}
.quoteend

　トラック名は、先ほどトラック状態で設定したトラック名を指定します。
このトラックは、このMMLを実行しろ、という感じですね。
　MML列は最後に ; がくるまで、コンパイルし続けます。途中改行などが
存在しても構いません。ただし、MML列の中にコメントを設定することは
できないので注意して下さい。

　なんだかよくわかんない人のために(笑)、例をあげておきます。
このように書いて下さい。

.in 4
(例)テンポ=128で、コードCMをMIDIのCh0で、ベースをMIDIのCh1で鳴らしたい。
.quote
.{
.nf
 .object _main
 cond  = *COND;
 chord = MIDI(0),OFF;
 bass  = MIDI(1),OFF;
 {
     cond   t128;
     chord  @0v15o5l1x127q127 'ceg'1;
     bass   @1v15o3l8x127q127 [2c>c<];
 }
.}
.quoteend
.so mml.ntf
.so using.ntf
.chapter 謝辞及び著作権表示、使用条件など
.so cpright.ntf

.in 0
.hl
mPlus(mfxc+) compiler ver.1.10
.ri
Copyright (c) 1991,92,93,94 by T.Kobayashi and □
.ri
Interfair Lab. □
.ri
all rights reserved. □
